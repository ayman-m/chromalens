[build-system]
requires = ["setuptools>=78.1.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "chromalens"
version = "0.1.0"
description = "A powerful Python client and intuitive UI for ChromaDB vector database management"
readme = "README.md"
requires-python = ">=3.12"
license = {text = "MIT"}
authors = [
    {name = "Ayman Mahmoud", email = "ayman.s.mahmoud@outlook.com"}
]
classifiers = [
    "Programming Language :: Python :: 3",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
]
dependencies = [
    "requests>=2.32.3",
    "pydantic>=2.11.3",
    "click>=8.1.8",
    "tabulate>=0.9.0",
    "numpy>=2.2.4",
]

[project.optional-dependencies]
ui = [
    "streamlit>=1.44.1",
    "pandas>=2.2.3",
    "plotly>=6.0.1",
    "altair>=5.5.0",
    "matplotlib>=3.10.1",
    "seaborn>=0.13.2",
    "umap-learn>=0.5.7",
    "scikit-learn>=1.6.1",
]
embeddings = [
    "sentence-transformers>=4.0.2",
    "openai>=1.73.0",
    "cohere>=5.14.2",

    # Sentence Transformers for universal embedding support
    "sentence-transformers>=4.0.2",
    
    # External embedding services
    "openai>=1.73.0",
    "cohere>=5.14.2",
    "anthropic>=0.49.0",
    
    # Hugging Face ecosystem
    "transformers>=4.51.2",
    "torch>=2.6.0",
    "accelerate>=1.6.0",
    "huggingface-hub>=0.30.2",
    "tokenizers>=0.21.1",
    
    # Additional specialized embedding tools
    "instructor>=1.7.9",     # For instruction-tuned embeddings
    "langchain>=0.3.23",    # For embeddings in workflows
    "onnxruntime>=1.21.0",   # For optimized inference
    "faiss-cpu>=1.10.0",      # For vector search
]
dev = [
    "pytest>=8.3.5",
    "pytest-cov>=6.1.1",
    "black>=25.1.0",
    "isort>=6.0.1",
    "mypy>=1.15.0",
]
all = [
    # UI dependencies
    "streamlit>=1.44.1",
    "pandas>=2.2.3",
    "plotly>=6.0.1",
    "altair>=5.5.0",
    "matplotlib>=3.10.1",
    "seaborn>=0.13.2",
    "umap-learn>=0.5.7",
    "scikit-learn>=1.6.1",
    
    # All embedding modules
    "sentence-transformers>=4.0.2",
    "openai>=1.73.0",
    "cohere>=5.14.2",
    "sentence-transformers>=4.0.2",
    "openai>=1.73.0",
    "cohere>=5.14.2",
    "anthropic>=0.49.0",
    "transformers>=4.51.2",
    "torch>=2.6.0",
    "accelerate>=1.6.0",
    "huggingface-hub>=0.30.2",
    "tokenizers>=0.21.1",
    "instructor>=1.7.9",
    "langchain>=0.3.23",
    "onnxruntime>=1.21.0",
    "faiss-cpu>=1.10.0",
]

[project.scripts]
chromalens = "chromalens.cli.main:main"

[project.urls]
"Homepage" = "https://github.com/ayman-m/chromalens"
"Bug Tracker" = "https://github.com/ayman-m/chromalens/issues"
"Documentation" = "https://github.com/ayman-m/chromalens/docs"

[tool.setuptools]
packages = ["chromalens"]

[tool.black]
line-length = 88
target-version = ["py312"]

[tool.isort]
profile = "black"
line_length = 88

[tool.mypy]
python_version = "3.12"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = "test_*.py"
markers = [
    "unit: mark a test as a unit test",
    "integration: mark a test as an integration test",
    "ui: mark a test as a UI test",
]

[tool.coverage.run]
source = ["chromalens"]
omit = ["*/tests/*", "*/examples/*"]